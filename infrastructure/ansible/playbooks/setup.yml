---
# AI Guardian System Deployment Playbook
# Version: 1.0.0
# Requires: ansible-core >= 2.15.5, ansible.posix >= 1.5.4, community.general >= 7.3.0

- name: Deploy AI Guardian System
  hosts: gaming_consoles
  become: true
  gather_facts: true
  any_errors_fatal: true
  max_fail_percentage: 0

  pre_tasks:
    - name: Validate system requirements
      block:
        - name: Check FreeBSD version
          assert:
            that: "ansible_distribution_version is version('13.2', '>=')"
            msg: "FreeBSD 13.2 or higher is required"

        - name: Validate hardware requirements
          assert:
            that:
              - ansible_processor_cores >= 4
              - ansible_memtotal_mb >= 8192
              - ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_total') | first >= 100000000000
            msg: "Insufficient hardware resources"

        - name: Verify TPM/HSM availability
          command: tpm2_getcap -c properties-fixed
          register: tpm_check
          changed_when: false
          failed_when: tpm_check.rc != 0

        - name: Verify ZFS support
          command: zfs version
          register: zfs_check
          changed_when: false
          failed_when: zfs_check.rc != 0

  roles:
    - role: common
      tags: ['system', 'base']
      vars:
        base_packages:
          - rust@1.75.0
          - python3@3.11
          - temporal@1.20.0
          - burn@0.8.0
          - candle@0.3.0
          - tokio@1.32.0
        zfs_config:
          pool_name: guardian
          encryption: aes-256-gcm
          compression: lz4
          dedup: "off"
          atime: "off"
          xattr: "on"
          recordsize: "128K"
        system_tuning:
          max_files: 1000000
          max_proc: 4096
          shared_memory: "8G"

    - role: security
      tags: ['security', 'hardening']
      vars:
        security_level: high
        capsicum_enabled: true
        mac_enabled: true
        audit_enabled: true
        geli_config:
          cipher: aes-xts
          key_length: 256
        tls_config:
          min_version: "1.3"
          ciphers: "HIGH:!aNULL:!MD5:!RC4"
        encrypted_devices:
          - /dev/ada0p3
          - /dev/ada1p3

    - role: monitoring
      tags: ['monitoring', 'observability']
      vars:
        monitoring_base_dir: /var/guardian/monitoring
        prometheus_version: "2.45.0"
        grafana_version: "9.5.0"
        alertmanager_version: "0.25.0"
        ml_metrics:
          collection_interval: "10s"
          retention_period: "30d"
          alert_thresholds:
            model_latency: "100ms"
            accuracy_drop: "0.05"
            resource_usage: "90%"

  post_tasks:
    - name: Verify deployment
      block:
        - name: Check service status
          service_facts:
          register: service_status

        - name: Validate security configurations
          command: "{{ item }}"
          loop:
            - capsicumtest
            - mactest
            - auditctl -l
          register: security_validation
          changed_when: false

        - name: Verify monitoring stack
          uri:
            url: "https://{{ item }}.guardian.local/-/healthy"
            validate_certs: yes
            status_code: 200
          loop:
            - prometheus
            - grafana
            - alertmanager
          register: monitoring_health

        - name: Generate deployment report
          template:
            src: deployment_report.j2
            dest: /var/log/guardian/deployment_report.json
            mode: '0600'
          vars:
            report_data:
              timestamp: "{{ ansible_date_time.iso8601 }}"
              services_status: "{{ service_status }}"
              security_validation: "{{ security_validation }}"
              monitoring_health: "{{ monitoring_health }}"

  handlers:
    - name: restart_guardian
      service:
        name: guardian
        state: restarted
      listen: "restart services"

    - name: reload_monitoring
      command: "{{ item }}"
      loop:
        - promtool check config /etc/prometheus/prometheus.yml
        - curl -X POST http://localhost:9090/-/reload
      listen: "reload monitoring"

  vars:
    system_config:
      timezone: UTC
      locale: en_US.UTF-8
      kernel_params:
        security.bsd.hardening: 1
        kern.randompid: 1
        kern.securelevel: 2
        hw.nx: 1

    security_config:
      audit_level: high
      capsicum_services:
        - guardian-core
        - ml-engine
        - temporal-worker
      mac_policies:
        - biba
        - mls
        - seeotheruids
      tpm_config:
        measured_boot: true
        pcr_validation: [0, 1, 2, 3, 4, 7]

    monitoring_config:
      metrics_retention: "30d"
      scrape_interval: "15s"
      alert_endpoints:
        - security-team
        - operations
        - ml-team
      ml_monitoring:
        model_metrics: true
        inference_latency: true
        resource_usage: true
        accuracy_tracking: true